/*
// Function to write vector of Score to file
void writeScoresToFile(const std::vector<User>& scores, const std::string& filename) {
    std::ofstream outFile(filename);

    if (outFile.is_open()) {
        for (const User& s : scores) {
            outFile << s.getName() << ' ' << s.getScore() << '\n';
        }
        outFile.close();
        std::cout << "Scores written to " << filename << " successfully.\n";
    } else {
        std::cerr << "Unable to open file: " << filename << '\n';
    }
}

// Function to read vector of Score from file
std::vector<User> readScoresFromFile(const std::string& filename) {
    std::vector<User> scores;
    std::ifstream inFile(filename);
    if (inFile.is_open()) {
        while (inFile >> std::ws && !inFile.eof()) {
            std::string name;
            int score;
            inFile >> name >> score;
            scores.emplace_back(name, score);
        }
        inFile.close();
        std::cout << "Scores read from " << filename << " successfully.\n";
    } else {
        std::cerr << "Unable to open file: " << filename << '\n';
       // return errno;
    }

    return scores;
    //std::ifstream fin("User.txt");
}
*/
 /* userScore = readScoresFromFile("D:\\FMI\\POO\\POO-project\\Score.txt");*/

 //Item
 //
 // Created by sebas on 26.11.2023.
 //
 #include <iostream>
 #ifndef OOP_ITEM_HPP
 #define OOP_ITEM_HPP


 class Item {
 public:
     Item()=default;
     virtual ~Item()=default;
     virtual void use();
 };


 #endif //OOP_ITEM_HPP
//Gun
class Gun : public Item{
private:
    std::string G_Name;
    int damage, magazine, recoil;

public:
    Gun() = default;
    ~Gun() = default;
    Gun(const std::string& gn, const int& dmg, const int& mag, const int& recoil) ;
    friend std::ostream& operator<<(std::ostream& out, const Gun& gun);
    Gun& operator=(const Gun& g);
    //void use (Player &shooter, Enemy &target);
    int getDamage() const ;
    int getRecoil() const ;
    const std::string &getGNume() const ;

};


#endif //OOP_BULLET_HPP
